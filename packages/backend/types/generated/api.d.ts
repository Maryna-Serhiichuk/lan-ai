/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BooleanFilterInput: { // input type
    and?: Array<boolean | null> | null; // [Boolean]
    between?: Array<boolean | null> | null; // [Boolean]
    contains?: boolean | null; // Boolean
    containsi?: boolean | null; // Boolean
    endsWith?: boolean | null; // Boolean
    eq?: boolean | null; // Boolean
    eqi?: boolean | null; // Boolean
    gt?: boolean | null; // Boolean
    gte?: boolean | null; // Boolean
    in?: Array<boolean | null> | null; // [Boolean]
    lt?: boolean | null; // Boolean
    lte?: boolean | null; // Boolean
    ne?: boolean | null; // Boolean
    nei?: boolean | null; // Boolean
    not?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    notContains?: boolean | null; // Boolean
    notContainsi?: boolean | null; // Boolean
    notIn?: Array<boolean | null> | null; // [Boolean]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<boolean | null> | null; // [Boolean]
    startsWith?: boolean | null; // Boolean
  }
  ComponentContextDynamicFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContextDynamicFiltersInput'] | null> | null; // [ComponentContextDynamicFiltersInput]
    language?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    level?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    native?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentContextDynamicFiltersInput'] | null; // ComponentContextDynamicFiltersInput
    or?: Array<NexusGenInputs['ComponentContextDynamicFiltersInput'] | null> | null; // [ComponentContextDynamicFiltersInput]
    study?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    tenses?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    theme?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    words?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentContextDynamicInput: { // input type
    id?: string | null; // ID
    language?: string | null; // String
    level?: string | null; // String
    native?: string | null; // String
    study?: string | null; // String
    tenses?: string | null; // String
    theme?: string | null; // String
    words?: string | null; // String
  }
  DateFilterInput: { // input type
    and?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    between?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    contains?: NexusGenScalars['Date'] | null; // Date
    containsi?: NexusGenScalars['Date'] | null; // Date
    endsWith?: NexusGenScalars['Date'] | null; // Date
    eq?: NexusGenScalars['Date'] | null; // Date
    eqi?: NexusGenScalars['Date'] | null; // Date
    gt?: NexusGenScalars['Date'] | null; // Date
    gte?: NexusGenScalars['Date'] | null; // Date
    in?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    lt?: NexusGenScalars['Date'] | null; // Date
    lte?: NexusGenScalars['Date'] | null; // Date
    ne?: NexusGenScalars['Date'] | null; // Date
    nei?: NexusGenScalars['Date'] | null; // Date
    not?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    notContains?: NexusGenScalars['Date'] | null; // Date
    notContainsi?: NexusGenScalars['Date'] | null; // Date
    notIn?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    startsWith?: NexusGenScalars['Date'] | null; // Date
  }
  DateTimeFilterInput: { // input type
    and?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    between?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    contains?: NexusGenScalars['DateTime'] | null; // DateTime
    containsi?: NexusGenScalars['DateTime'] | null; // DateTime
    endsWith?: NexusGenScalars['DateTime'] | null; // DateTime
    eq?: NexusGenScalars['DateTime'] | null; // DateTime
    eqi?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    ne?: NexusGenScalars['DateTime'] | null; // DateTime
    nei?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    notContains?: NexusGenScalars['DateTime'] | null; // DateTime
    notContainsi?: NexusGenScalars['DateTime'] | null; // DateTime
    notIn?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    startsWith?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FileInfoInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    name?: string | null; // String
  }
  FloatFilterInput: { // input type
    and?: Array<number | null> | null; // [Float]
    between?: Array<number | null> | null; // [Float]
    contains?: number | null; // Float
    containsi?: number | null; // Float
    endsWith?: number | null; // Float
    eq?: number | null; // Float
    eqi?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: Array<number | null> | null; // [Float]
    lt?: number | null; // Float
    lte?: number | null; // Float
    ne?: number | null; // Float
    nei?: number | null; // Float
    not?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    notContains?: number | null; // Float
    notContainsi?: number | null; // Float
    notIn?: Array<number | null> | null; // [Float]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Float]
    startsWith?: number | null; // Float
  }
  I18NLocaleFiltersInput: { // input type
    and?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
    or?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  I18NLocaleInput: { // input type
    code?: string | null; // String
    name?: string | null; // String
  }
  IDFilterInput: { // input type
    and?: Array<string | null> | null; // [ID]
    between?: Array<string | null> | null; // [ID]
    contains?: string | null; // ID
    containsi?: string | null; // ID
    endsWith?: string | null; // ID
    eq?: string | null; // ID
    eqi?: string | null; // ID
    gt?: string | null; // ID
    gte?: string | null; // ID
    in?: Array<string | null> | null; // [ID]
    lt?: string | null; // ID
    lte?: string | null; // ID
    ne?: string | null; // ID
    nei?: string | null; // ID
    not?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    notContains?: string | null; // ID
    notContainsi?: string | null; // ID
    notIn?: Array<string | null> | null; // [ID]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [ID]
    startsWith?: string | null; // ID
  }
  IntFilterInput: { // input type
    and?: Array<number | null> | null; // [Int]
    between?: Array<number | null> | null; // [Int]
    contains?: number | null; // Int
    containsi?: number | null; // Int
    endsWith?: number | null; // Int
    eq?: number | null; // Int
    eqi?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: Array<number | null> | null; // [Int]
    lt?: number | null; // Int
    lte?: number | null; // Int
    ne?: number | null; // Int
    nei?: number | null; // Int
    not?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    notContains?: number | null; // Int
    notContainsi?: number | null; // Int
    notIn?: Array<number | null> | null; // [Int]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Int]
    startsWith?: number | null; // Int
  }
  JSONFilterInput: { // input type
    and?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    between?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    contains?: NexusGenScalars['JSON'] | null; // JSON
    containsi?: NexusGenScalars['JSON'] | null; // JSON
    endsWith?: NexusGenScalars['JSON'] | null; // JSON
    eq?: NexusGenScalars['JSON'] | null; // JSON
    eqi?: NexusGenScalars['JSON'] | null; // JSON
    gt?: NexusGenScalars['JSON'] | null; // JSON
    gte?: NexusGenScalars['JSON'] | null; // JSON
    in?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    lt?: NexusGenScalars['JSON'] | null; // JSON
    lte?: NexusGenScalars['JSON'] | null; // JSON
    ne?: NexusGenScalars['JSON'] | null; // JSON
    nei?: NexusGenScalars['JSON'] | null; // JSON
    not?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    notContains?: NexusGenScalars['JSON'] | null; // JSON
    notContainsi?: NexusGenScalars['JSON'] | null; // JSON
    notIn?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    startsWith?: NexusGenScalars['JSON'] | null; // JSON
  }
  ListFiltersInput: { // input type
    and?: Array<NexusGenInputs['ListFiltersInput'] | null> | null; // [ListFiltersInput]
    closed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ListFiltersInput'] | null; // ListFiltersInput
    or?: Array<NexusGenInputs['ListFiltersInput'] | null> | null; // [ListFiltersInput]
    setting?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    words?: NexusGenInputs['WordFiltersInput'] | null; // WordFiltersInput
  }
  ListInput: { // input type
    closed?: boolean | null; // Boolean
    name?: string | null; // String
    setting?: string | null; // ID
    words?: Array<string | null> | null; // [ID]
  }
  LongFilterInput: { // input type
    and?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    between?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    contains?: NexusGenScalars['Long'] | null; // Long
    containsi?: NexusGenScalars['Long'] | null; // Long
    endsWith?: NexusGenScalars['Long'] | null; // Long
    eq?: NexusGenScalars['Long'] | null; // Long
    eqi?: NexusGenScalars['Long'] | null; // Long
    gt?: NexusGenScalars['Long'] | null; // Long
    gte?: NexusGenScalars['Long'] | null; // Long
    in?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    lt?: NexusGenScalars['Long'] | null; // Long
    lte?: NexusGenScalars['Long'] | null; // Long
    ne?: NexusGenScalars['Long'] | null; // Long
    nei?: NexusGenScalars['Long'] | null; // Long
    not?: NexusGenInputs['LongFilterInput'] | null; // LongFilterInput
    notContains?: NexusGenScalars['Long'] | null; // Long
    notContainsi?: NexusGenScalars['Long'] | null; // Long
    notIn?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    startsWith?: NexusGenScalars['Long'] | null; // Long
  }
  PaginationArg: { // input type
    limit?: number | null; // Int
    page?: number | null; // Int
    pageSize?: number | null; // Int
    start?: number | null; // Int
  }
  PromptFiltersInput: { // input type
    and?: Array<NexusGenInputs['PromptFiltersInput'] | null> | null; // [PromptFiltersInput]
    ask?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    check?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['PromptFiltersInput'] | null; // PromptFiltersInput
    or?: Array<NexusGenInputs['PromptFiltersInput'] | null> | null; // [PromptFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    variable?: NexusGenInputs['ComponentContextDynamicFiltersInput'] | null; // ComponentContextDynamicFiltersInput
  }
  PromptInput: { // input type
    ask?: string | null; // String
    check?: string | null; // String
    description?: string | null; // String
    name?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    variable?: NexusGenInputs['ComponentContextDynamicInput'] | null; // ComponentContextDynamicInput
  }
  SentenceInput: { // input type
    id?: string | null; // ID
    original?: string | null; // String
    sentences?: string | null; // String
  }
  SettingFiltersInput: { // input type
    account?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    and?: Array<NexusGenInputs['SettingFiltersInput'] | null> | null; // [SettingFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    language?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    level?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    lists?: NexusGenInputs['ListFiltersInput'] | null; // ListFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
    or?: Array<NexusGenInputs['SettingFiltersInput'] | null> | null; // [SettingFiltersInput]
    tenses?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    theme?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    user?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
  }
  SettingInput: { // input type
    account?: string | null; // ID
    language?: NexusGenEnums['ENUM_SETTING_LANGUAGE'] | null; // ENUM_SETTING_LANGUAGE
    level?: NexusGenEnums['ENUM_SETTING_LEVEL'] | null; // ENUM_SETTING_LEVEL
    lists?: Array<string | null> | null; // [ID]
    name?: string | null; // String
    tenses?: string | null; // String
    theme?: string | null; // String
    user?: string | null; // ID
  }
  StringFilterInput: { // input type
    and?: Array<string | null> | null; // [String]
    between?: Array<string | null> | null; // [String]
    contains?: string | null; // String
    containsi?: string | null; // String
    endsWith?: string | null; // String
    eq?: string | null; // String
    eqi?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: Array<string | null> | null; // [String]
    lt?: string | null; // String
    lte?: string | null; // String
    ne?: string | null; // String
    nei?: string | null; // String
    not?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    notContains?: string | null; // String
    notContainsi?: string | null; // String
    notIn?: Array<string | null> | null; // [String]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [String]
    startsWith?: string | null; // String
  }
  TimeFilterInput: { // input type
    and?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    between?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    contains?: NexusGenScalars['Time'] | null; // Time
    containsi?: NexusGenScalars['Time'] | null; // Time
    endsWith?: NexusGenScalars['Time'] | null; // Time
    eq?: NexusGenScalars['Time'] | null; // Time
    eqi?: NexusGenScalars['Time'] | null; // Time
    gt?: NexusGenScalars['Time'] | null; // Time
    gte?: NexusGenScalars['Time'] | null; // Time
    in?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    lt?: NexusGenScalars['Time'] | null; // Time
    lte?: NexusGenScalars['Time'] | null; // Time
    ne?: NexusGenScalars['Time'] | null; // Time
    nei?: NexusGenScalars['Time'] | null; // Time
    not?: NexusGenInputs['TimeFilterInput'] | null; // TimeFilterInput
    notContains?: NexusGenScalars['Time'] | null; // Time
    notContainsi?: NexusGenScalars['Time'] | null; // Time
    notIn?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    startsWith?: NexusGenScalars['Time'] | null; // Time
  }
  UploadFileFiltersInput: { // input type
    alternativeText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    caption?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    ext?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    folder?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    folderPath?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    formats?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    hash?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    height?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    mime?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    or?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    previewUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider_metadata?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    size?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    width?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  UploadFileInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    ext?: string | null; // String
    folder?: string | null; // ID
    folderPath?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash?: string | null; // String
    height?: number | null; // Int
    mime?: string | null; // String
    name?: string | null; // String
    previewUrl?: string | null; // String
    provider?: string | null; // String
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size?: number | null; // Float
    url?: string | null; // String
    width?: number | null; // Int
  }
  UploadFolderFiltersInput: { // input type
    and?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    children?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    files?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    or?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    parent?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    path?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    pathId?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UploadFolderInput: { // input type
    children?: Array<string | null> | null; // [ID]
    files?: Array<string | null> | null; // [ID]
    name?: string | null; // String
    parent?: string | null; // ID
    path?: string | null; // String
    pathId?: number | null; // Int
  }
  UsersPermissionsLoginInput: { // input type
    identifier: string; // String!
    password: string; // String!
    provider: string; // String!
  }
  UsersPermissionsPermissionFiltersInput: { // input type
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UsersPermissionsPermissionInput: { // input type
    action?: string | null; // String
    role?: string | null; // ID
  }
  UsersPermissionsRegisterInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  UsersPermissionsRoleFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    permissions?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    users?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
  }
  UsersPermissionsRoleInput: { // input type
    description?: string | null; // String
    name?: string | null; // String
    permissions?: Array<string | null> | null; // [ID]
    type?: string | null; // String
    users?: Array<string | null> | null; // [ID]
  }
  UsersPermissionsUserFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    confirmationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    confirmed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    email?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    lastAttendanceDate?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    password?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    setting?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
    settings?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  UsersPermissionsUserInput: { // input type
    blocked?: boolean | null; // Boolean
    confirmationToken?: string | null; // String
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    lastAttendanceDate?: string | null; // String
    password?: string | null; // String
    provider?: string | null; // String
    resetPasswordToken?: string | null; // String
    role?: string | null; // ID
    setting?: string | null; // ID
    settings?: Array<string | null> | null; // [ID]
    username?: string | null; // String
  }
  VariableFiltersInput: { // input type
    and?: Array<NexusGenInputs['VariableFiltersInput'] | null> | null; // [VariableFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['VariableFiltersInput'] | null; // VariableFiltersInput
    or?: Array<NexusGenInputs['VariableFiltersInput'] | null> | null; // [VariableFiltersInput]
    prompt?: NexusGenInputs['PromptFiltersInput'] | null; // PromptFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  VariableInput: { // input type
    prompt?: string | null; // ID
  }
  WordFiltersInput: { // input type
    active?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    and?: Array<NexusGenInputs['WordFiltersInput'] | null> | null; // [WordFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    list?: NexusGenInputs['ListFiltersInput'] | null; // ListFiltersInput
    not?: NexusGenInputs['WordFiltersInput'] | null; // WordFiltersInput
    or?: Array<NexusGenInputs['WordFiltersInput'] | null> | null; // [WordFiltersInput]
    point?: NexusGenInputs['LongFilterInput'] | null; // LongFilterInput
    studied?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    translation?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    word?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  WordInput: { // input type
    active?: boolean | null; // Boolean
    list?: string | null; // ID
    point?: NexusGenScalars['Long'] | null; // Long
    studied?: boolean | null; // Boolean
    translation?: string | null; // String
    word?: string | null; // String
  }
  WordsListInput: { // input type
    name?: string | null; // String
    words?: Array<NexusGenInputs['WordInput'] | null> | null; // [WordInput]
  }
  WordsPointListInput: { // input type
    id?: string | null; // ID
    point?: number | null; // Int
  }
}

export interface NexusGenEnums {
  ENUM_SETTING_LANGUAGE: "english"
  ENUM_SETTING_LEVEL: "A1" | "A2" | "B1" | "B2" | "C1" | "C2"
  PublicationState: "live" | "preview"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  I18NLocaleCode: any
  JSON: any
  Long: any
  Time: any
  Upload: any
}

export interface NexusGenObjects {
  ComponentContextDynamic: { // root type
    id: string; // ID!
    language?: string | null; // String
    level?: string | null; // String
    native?: string | null; // String
    study?: string | null; // String
    tenses?: string | null; // String
    theme?: string | null; // String
    words?: string | null; // String
  }
  Error: { // root type
    message?: string | null; // String
  }
  I18NLocale: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: {};
  I18NLocaleEntityResponse: {};
  I18NLocaleEntityResponseCollection: {};
  I18NLocaleRelationResponseCollection: {};
  List: { // root type
    closed?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ListEntity: {};
  ListEntityResponse: {};
  ListEntityResponseCollection: {};
  ListRelationResponseCollection: {};
  Mutation: {};
  Pagination: { // root type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Prompt: { // root type
    ask?: string | null; // String
    check?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    name?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PromptEntity: {};
  PromptEntityResponse: {};
  PromptEntityResponseCollection: {};
  PromptRelationResponseCollection: {};
  Query: {};
  ResponseCollectionMeta: {};
  Sentence: { // root type
    text?: string | null; // String
  }
  SentenceResponse: { // root type
    explain?: string | null; // String
    id?: string | null; // ID
  }
  SentencesResponse: { // root type
    data?: Array<NexusGenRootTypes['Sentence'] | null> | null; // [Sentence]
  }
  SentencesResultResponse: { // root type
    data?: Array<NexusGenRootTypes['SentenceResponse'] | null> | null; // [SentenceResponse]
  }
  Setting: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    language?: NexusGenEnums['ENUM_SETTING_LANGUAGE'] | null; // ENUM_SETTING_LANGUAGE
    level?: NexusGenEnums['ENUM_SETTING_LEVEL'] | null; // ENUM_SETTING_LEVEL
    name?: string | null; // String
    tenses?: string | null; // String
    theme?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SettingEntity: {};
  SettingEntityResponse: {};
  SettingEntityResponseCollection: {};
  SettingRelationResponseCollection: {};
  UploadFile: { // root type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height?: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl?: string | null; // String
    provider: string; // String!
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width?: number | null; // Int
  }
  UploadFileEntity: {};
  UploadFileEntityResponse: {};
  UploadFileEntityResponseCollection: {};
  UploadFileRelationResponseCollection: {};
  UploadFolder: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    path: string; // String!
    pathId: number; // Int!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: {};
  UploadFolderEntityResponse: {};
  UploadFolderEntityResponseCollection: {};
  UploadFolderRelationResponseCollection: {};
  UsersPermissionsCreateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // root type
    jwt?: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    id: string; // ID!
    role?: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // root type
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    type?: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // root type
    action: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: {};
  UsersPermissionsPermissionEntityResponse: {};
  UsersPermissionsPermissionEntityResponseCollection: {};
  UsersPermissionsPermissionRelationResponseCollection: {};
  UsersPermissionsRole: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    name: string; // String!
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsRoleEntity: {};
  UsersPermissionsRoleEntityResponse: {};
  UsersPermissionsRoleEntityResponseCollection: {};
  UsersPermissionsRoleRelationResponseCollection: {};
  UsersPermissionsUpdateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    lastAttendanceDate?: string | null; // String
    provider?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: {};
  UsersPermissionsUserEntityResponse: {};
  UsersPermissionsUserEntityResponseCollection: {};
  UsersPermissionsUserRelationResponseCollection: {};
  Variable: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  VariableEntity: {};
  VariableEntityResponse: {};
  VariableEntityResponseCollection: {};
  VariableRelationResponseCollection: {};
  Word: { // root type
    active?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    point?: NexusGenScalars['Long'] | null; // Long
    studied?: boolean | null; // Boolean
    translation?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    word?: string | null; // String
  }
  WordEntity: {};
  WordEntityResponse: {};
  WordEntityResponseCollection: {};
  WordRelationResponseCollection: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  GenericMorph: NexusGenRootTypes['ComponentContextDynamic'] | NexusGenRootTypes['I18NLocale'] | NexusGenRootTypes['List'] | NexusGenRootTypes['Prompt'] | NexusGenRootTypes['Setting'] | NexusGenRootTypes['UploadFile'] | NexusGenRootTypes['UploadFolder'] | NexusGenRootTypes['UsersPermissionsPermission'] | NexusGenRootTypes['UsersPermissionsRole'] | NexusGenRootTypes['UsersPermissionsUser'] | NexusGenRootTypes['Variable'] | NexusGenRootTypes['Word'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  ComponentContextDynamic: { // field return type
    id: string; // ID!
    language: string | null; // String
    level: string | null; // String
    native: string | null; // String
    study: string | null; // String
    tenses: string | null; // String
    theme: string | null; // String
    words: string | null; // String
  }
  Error: { // field return type
    code: string; // String!
    message: string | null; // String
  }
  I18NLocale: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: { // field return type
    attributes: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id: string | null; // ID
  }
  I18NLocaleEntityResponse: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  I18NLocaleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
  }
  List: { // field return type
    closed: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string | null; // String
    setting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    words: NexusGenRootTypes['WordRelationResponseCollection'] | null; // WordRelationResponseCollection
  }
  ListEntity: { // field return type
    attributes: NexusGenRootTypes['List'] | null; // List
    id: string | null; // ID
  }
  ListEntityResponse: { // field return type
    data: NexusGenRootTypes['ListEntity'] | null; // ListEntity
  }
  ListEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ListEntity'][]; // [ListEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ListRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['ListEntity'][]; // [ListEntity!]!
  }
  Mutation: { // field return type
    changePassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    changeWordsPoint: NexusGenRootTypes['WordEntityResponseCollection'] | null; // WordEntityResponseCollection
    checkSentences: NexusGenRootTypes['SentencesResultResponse'] | null; // SentencesResultResponse
    createList: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    createPrompt: NexusGenRootTypes['PromptEntityResponse'] | null; // PromptEntityResponse
    createSetting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    createUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    createUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsCreateRolePayload'] | null; // UsersPermissionsCreateRolePayload
    createUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    createWord: NexusGenRootTypes['WordEntityResponse'] | null; // WordEntityResponse
    createWordsList: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    deleteList: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    deletePrompt: NexusGenRootTypes['PromptEntityResponse'] | null; // PromptEntityResponse
    deleteSetting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    deleteUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    deleteUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    deleteUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsDeleteRolePayload'] | null; // UsersPermissionsDeleteRolePayload
    deleteUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    deleteVariable: NexusGenRootTypes['VariableEntityResponse'] | null; // VariableEntityResponse
    deleteWord: NexusGenRootTypes['WordEntityResponse'] | null; // WordEntityResponse
    emailConfirmation: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    forgotPassword: NexusGenRootTypes['UsersPermissionsPasswordPayload'] | null; // UsersPermissionsPasswordPayload
    getSentences: NexusGenRootTypes['SentencesResponse'] | null; // SentencesResponse
    login: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    multipleUpload: Array<NexusGenRootTypes['UploadFileEntityResponse'] | null>; // [UploadFileEntityResponse]!
    register: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    removeFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    resetPassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    updateFileInfo: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    updateList: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    updatePrompt: NexusGenRootTypes['PromptEntityResponse'] | null; // PromptEntityResponse
    updateSetting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    updateUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    updateUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    updateUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsUpdateRolePayload'] | null; // UsersPermissionsUpdateRolePayload
    updateUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    updateVariable: NexusGenRootTypes['VariableEntityResponse'] | null; // VariableEntityResponse
    updateWord: NexusGenRootTypes['WordEntityResponse'] | null; // WordEntityResponse
    updateWordsPoints: NexusGenRootTypes['WordEntityResponseCollection'] | null; // WordEntityResponseCollection
    upload: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
  }
  Pagination: { // field return type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Prompt: { // field return type
    ask: string | null; // String
    check: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    name: string | null; // String
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    variable: NexusGenRootTypes['ComponentContextDynamic'] | null; // ComponentContextDynamic
  }
  PromptEntity: { // field return type
    attributes: NexusGenRootTypes['Prompt'] | null; // Prompt
    id: string | null; // ID
  }
  PromptEntityResponse: { // field return type
    data: NexusGenRootTypes['PromptEntity'] | null; // PromptEntity
  }
  PromptEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['PromptEntity'][]; // [PromptEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  PromptRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['PromptEntity'][]; // [PromptEntity!]!
  }
  Query: { // field return type
    i18NLocale: NexusGenRootTypes['I18NLocaleEntityResponse'] | null; // I18NLocaleEntityResponse
    i18NLocales: NexusGenRootTypes['I18NLocaleEntityResponseCollection'] | null; // I18NLocaleEntityResponseCollection
    list: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    lists: NexusGenRootTypes['ListEntityResponseCollection'] | null; // ListEntityResponseCollection
    me: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    prompt: NexusGenRootTypes['PromptEntityResponse'] | null; // PromptEntityResponse
    prompts: NexusGenRootTypes['PromptEntityResponseCollection'] | null; // PromptEntityResponseCollection
    setting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    settings: NexusGenRootTypes['SettingEntityResponseCollection'] | null; // SettingEntityResponseCollection
    uploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    uploadFiles: NexusGenRootTypes['UploadFileEntityResponseCollection'] | null; // UploadFileEntityResponseCollection
    uploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    uploadFolders: NexusGenRootTypes['UploadFolderEntityResponseCollection'] | null; // UploadFolderEntityResponseCollection
    usersPermissionsRole: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    usersPermissionsRoles: NexusGenRootTypes['UsersPermissionsRoleEntityResponseCollection'] | null; // UsersPermissionsRoleEntityResponseCollection
    usersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
    usersPermissionsUsers: NexusGenRootTypes['UsersPermissionsUserEntityResponseCollection'] | null; // UsersPermissionsUserEntityResponseCollection
    variable: NexusGenRootTypes['VariableEntityResponse'] | null; // VariableEntityResponse
    word: NexusGenRootTypes['WordEntityResponse'] | null; // WordEntityResponse
    words: NexusGenRootTypes['WordEntityResponseCollection'] | null; // WordEntityResponseCollection
  }
  ResponseCollectionMeta: { // field return type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  Sentence: { // field return type
    text: string | null; // String
  }
  SentenceResponse: { // field return type
    explain: string | null; // String
    id: string | null; // ID
  }
  SentencesResponse: { // field return type
    data: Array<NexusGenRootTypes['Sentence'] | null> | null; // [Sentence]
  }
  SentencesResultResponse: { // field return type
    data: Array<NexusGenRootTypes['SentenceResponse'] | null> | null; // [SentenceResponse]
  }
  Setting: { // field return type
    account: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    language: NexusGenEnums['ENUM_SETTING_LANGUAGE'] | null; // ENUM_SETTING_LANGUAGE
    level: NexusGenEnums['ENUM_SETTING_LEVEL'] | null; // ENUM_SETTING_LEVEL
    lists: NexusGenRootTypes['ListRelationResponseCollection'] | null; // ListRelationResponseCollection
    name: string | null; // String
    tenses: string | null; // String
    theme: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
  }
  SettingEntity: { // field return type
    attributes: NexusGenRootTypes['Setting'] | null; // Setting
    id: string | null; // ID
  }
  SettingEntityResponse: { // field return type
    data: NexusGenRootTypes['SettingEntity'] | null; // SettingEntity
  }
  SettingEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['SettingEntity'][]; // [SettingEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  SettingRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['SettingEntity'][]; // [SettingEntity!]!
  }
  UploadFile: { // field return type
    alternativeText: string | null; // String
    caption: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    ext: string | null; // String
    formats: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl: string | null; // String
    provider: string; // String!
    provider_metadata: NexusGenScalars['JSON'] | null; // JSON
    related: Array<NexusGenRootTypes['GenericMorph'] | null> | null; // [GenericMorph]
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width: number | null; // Int
  }
  UploadFileEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id: string | null; // ID
  }
  UploadFileEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFileRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
  }
  UploadFolder: { // field return type
    children: NexusGenRootTypes['UploadFolderRelationResponseCollection'] | null; // UploadFolderRelationResponseCollection
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    files: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
    name: string; // String!
    parent: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    path: string; // String!
    pathId: number; // Int!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFolder'] | null; // UploadFolder
    id: string | null; // ID
  }
  UploadFolderEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'] | null; // UploadFolderEntity
  }
  UploadFolderEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFolderRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
  }
  UsersPermissionsCreateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // field return type
    jwt: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    email: string | null; // String
    id: string; // ID!
    role: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // field return type
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    type: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // field return type
    action: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
  }
  UsersPermissionsRole: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    name: string; // String!
    permissions: NexusGenRootTypes['UsersPermissionsPermissionRelationResponseCollection'] | null; // UsersPermissionsPermissionRelationResponseCollection
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    users: NexusGenRootTypes['UsersPermissionsUserRelationResponseCollection'] | null; // UsersPermissionsUserRelationResponseCollection
  }
  UsersPermissionsRoleEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
  }
  UsersPermissionsUpdateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    lastAttendanceDate: string | null; // String
    provider: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    setting: NexusGenRootTypes['SettingEntityResponse'] | null; // SettingEntityResponse
    settings: NexusGenRootTypes['SettingRelationResponseCollection'] | null; // SettingRelationResponseCollection
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
  }
  Variable: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    prompt: NexusGenRootTypes['PromptEntityResponse'] | null; // PromptEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  VariableEntity: { // field return type
    attributes: NexusGenRootTypes['Variable'] | null; // Variable
    id: string | null; // ID
  }
  VariableEntityResponse: { // field return type
    data: NexusGenRootTypes['VariableEntity'] | null; // VariableEntity
  }
  VariableEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['VariableEntity'][]; // [VariableEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  VariableRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['VariableEntity'][]; // [VariableEntity!]!
  }
  Word: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    list: NexusGenRootTypes['ListEntityResponse'] | null; // ListEntityResponse
    point: NexusGenScalars['Long'] | null; // Long
    studied: boolean | null; // Boolean
    translation: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    word: string | null; // String
  }
  WordEntity: { // field return type
    attributes: NexusGenRootTypes['Word'] | null; // Word
    id: string | null; // ID
  }
  WordEntityResponse: { // field return type
    data: NexusGenRootTypes['WordEntity'] | null; // WordEntity
  }
  WordEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['WordEntity'][]; // [WordEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  WordRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['WordEntity'][]; // [WordEntity!]!
  }
}

export interface NexusGenFieldTypeNames {
  ComponentContextDynamic: { // field return type name
    id: 'ID'
    language: 'String'
    level: 'String'
    native: 'String'
    study: 'String'
    tenses: 'String'
    theme: 'String'
    words: 'String'
  }
  Error: { // field return type name
    code: 'String'
    message: 'String'
  }
  I18NLocale: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    name: 'String'
    updatedAt: 'DateTime'
  }
  I18NLocaleEntity: { // field return type name
    attributes: 'I18NLocale'
    id: 'ID'
  }
  I18NLocaleEntityResponse: { // field return type name
    data: 'I18NLocaleEntity'
  }
  I18NLocaleEntityResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
    meta: 'ResponseCollectionMeta'
  }
  I18NLocaleRelationResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
  }
  List: { // field return type name
    closed: 'Boolean'
    createdAt: 'DateTime'
    name: 'String'
    setting: 'SettingEntityResponse'
    updatedAt: 'DateTime'
    words: 'WordRelationResponseCollection'
  }
  ListEntity: { // field return type name
    attributes: 'List'
    id: 'ID'
  }
  ListEntityResponse: { // field return type name
    data: 'ListEntity'
  }
  ListEntityResponseCollection: { // field return type name
    data: 'ListEntity'
    meta: 'ResponseCollectionMeta'
  }
  ListRelationResponseCollection: { // field return type name
    data: 'ListEntity'
  }
  Mutation: { // field return type name
    changePassword: 'UsersPermissionsLoginPayload'
    changeWordsPoint: 'WordEntityResponseCollection'
    checkSentences: 'SentencesResultResponse'
    createList: 'ListEntityResponse'
    createPrompt: 'PromptEntityResponse'
    createSetting: 'SettingEntityResponse'
    createUploadFile: 'UploadFileEntityResponse'
    createUploadFolder: 'UploadFolderEntityResponse'
    createUsersPermissionsRole: 'UsersPermissionsCreateRolePayload'
    createUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    createWord: 'WordEntityResponse'
    createWordsList: 'ListEntityResponse'
    deleteList: 'ListEntityResponse'
    deletePrompt: 'PromptEntityResponse'
    deleteSetting: 'SettingEntityResponse'
    deleteUploadFile: 'UploadFileEntityResponse'
    deleteUploadFolder: 'UploadFolderEntityResponse'
    deleteUsersPermissionsRole: 'UsersPermissionsDeleteRolePayload'
    deleteUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    deleteVariable: 'VariableEntityResponse'
    deleteWord: 'WordEntityResponse'
    emailConfirmation: 'UsersPermissionsLoginPayload'
    forgotPassword: 'UsersPermissionsPasswordPayload'
    getSentences: 'SentencesResponse'
    login: 'UsersPermissionsLoginPayload'
    multipleUpload: 'UploadFileEntityResponse'
    register: 'UsersPermissionsLoginPayload'
    removeFile: 'UploadFileEntityResponse'
    resetPassword: 'UsersPermissionsLoginPayload'
    updateFileInfo: 'UploadFileEntityResponse'
    updateList: 'ListEntityResponse'
    updatePrompt: 'PromptEntityResponse'
    updateSetting: 'SettingEntityResponse'
    updateUploadFile: 'UploadFileEntityResponse'
    updateUploadFolder: 'UploadFolderEntityResponse'
    updateUsersPermissionsRole: 'UsersPermissionsUpdateRolePayload'
    updateUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    updateVariable: 'VariableEntityResponse'
    updateWord: 'WordEntityResponse'
    updateWordsPoints: 'WordEntityResponseCollection'
    upload: 'UploadFileEntityResponse'
  }
  Pagination: { // field return type name
    page: 'Int'
    pageCount: 'Int'
    pageSize: 'Int'
    total: 'Int'
  }
  Prompt: { // field return type name
    ask: 'String'
    check: 'String'
    createdAt: 'DateTime'
    description: 'String'
    name: 'String'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
    variable: 'ComponentContextDynamic'
  }
  PromptEntity: { // field return type name
    attributes: 'Prompt'
    id: 'ID'
  }
  PromptEntityResponse: { // field return type name
    data: 'PromptEntity'
  }
  PromptEntityResponseCollection: { // field return type name
    data: 'PromptEntity'
    meta: 'ResponseCollectionMeta'
  }
  PromptRelationResponseCollection: { // field return type name
    data: 'PromptEntity'
  }
  Query: { // field return type name
    i18NLocale: 'I18NLocaleEntityResponse'
    i18NLocales: 'I18NLocaleEntityResponseCollection'
    list: 'ListEntityResponse'
    lists: 'ListEntityResponseCollection'
    me: 'UsersPermissionsUser'
    prompt: 'PromptEntityResponse'
    prompts: 'PromptEntityResponseCollection'
    setting: 'SettingEntityResponse'
    settings: 'SettingEntityResponseCollection'
    uploadFile: 'UploadFileEntityResponse'
    uploadFiles: 'UploadFileEntityResponseCollection'
    uploadFolder: 'UploadFolderEntityResponse'
    uploadFolders: 'UploadFolderEntityResponseCollection'
    usersPermissionsRole: 'UsersPermissionsRoleEntityResponse'
    usersPermissionsRoles: 'UsersPermissionsRoleEntityResponseCollection'
    usersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    usersPermissionsUsers: 'UsersPermissionsUserEntityResponseCollection'
    variable: 'VariableEntityResponse'
    word: 'WordEntityResponse'
    words: 'WordEntityResponseCollection'
  }
  ResponseCollectionMeta: { // field return type name
    pagination: 'Pagination'
  }
  Sentence: { // field return type name
    text: 'String'
  }
  SentenceResponse: { // field return type name
    explain: 'String'
    id: 'ID'
  }
  SentencesResponse: { // field return type name
    data: 'Sentence'
  }
  SentencesResultResponse: { // field return type name
    data: 'SentenceResponse'
  }
  Setting: { // field return type name
    account: 'UsersPermissionsUserEntityResponse'
    createdAt: 'DateTime'
    language: 'ENUM_SETTING_LANGUAGE'
    level: 'ENUM_SETTING_LEVEL'
    lists: 'ListRelationResponseCollection'
    name: 'String'
    tenses: 'String'
    theme: 'String'
    updatedAt: 'DateTime'
    user: 'UsersPermissionsUserEntityResponse'
  }
  SettingEntity: { // field return type name
    attributes: 'Setting'
    id: 'ID'
  }
  SettingEntityResponse: { // field return type name
    data: 'SettingEntity'
  }
  SettingEntityResponseCollection: { // field return type name
    data: 'SettingEntity'
    meta: 'ResponseCollectionMeta'
  }
  SettingRelationResponseCollection: { // field return type name
    data: 'SettingEntity'
  }
  UploadFile: { // field return type name
    alternativeText: 'String'
    caption: 'String'
    createdAt: 'DateTime'
    ext: 'String'
    formats: 'JSON'
    hash: 'String'
    height: 'Int'
    mime: 'String'
    name: 'String'
    previewUrl: 'String'
    provider: 'String'
    provider_metadata: 'JSON'
    related: 'GenericMorph'
    size: 'Float'
    updatedAt: 'DateTime'
    url: 'String'
    width: 'Int'
  }
  UploadFileEntity: { // field return type name
    attributes: 'UploadFile'
    id: 'ID'
  }
  UploadFileEntityResponse: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFileEntityResponseCollection: { // field return type name
    data: 'UploadFileEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFileRelationResponseCollection: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFolder: { // field return type name
    children: 'UploadFolderRelationResponseCollection'
    createdAt: 'DateTime'
    files: 'UploadFileRelationResponseCollection'
    name: 'String'
    parent: 'UploadFolderEntityResponse'
    path: 'String'
    pathId: 'Int'
    updatedAt: 'DateTime'
  }
  UploadFolderEntity: { // field return type name
    attributes: 'UploadFolder'
    id: 'ID'
  }
  UploadFolderEntityResponse: { // field return type name
    data: 'UploadFolderEntity'
  }
  UploadFolderEntityResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFolderRelationResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
  }
  UsersPermissionsCreateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsDeleteRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsLoginPayload: { // field return type name
    jwt: 'String'
    user: 'UsersPermissionsMe'
  }
  UsersPermissionsMe: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    email: 'String'
    id: 'ID'
    role: 'UsersPermissionsMeRole'
    username: 'String'
  }
  UsersPermissionsMeRole: { // field return type name
    description: 'String'
    id: 'ID'
    name: 'String'
    type: 'String'
  }
  UsersPermissionsPasswordPayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsPermission: { // field return type name
    action: 'String'
    createdAt: 'DateTime'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
  }
  UsersPermissionsPermissionEntity: { // field return type name
    attributes: 'UsersPermissionsPermission'
    id: 'ID'
  }
  UsersPermissionsPermissionEntityResponse: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsRole: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    name: 'String'
    permissions: 'UsersPermissionsPermissionRelationResponseCollection'
    type: 'String'
    updatedAt: 'DateTime'
    users: 'UsersPermissionsUserRelationResponseCollection'
  }
  UsersPermissionsRoleEntity: { // field return type name
    attributes: 'UsersPermissionsRole'
    id: 'ID'
  }
  UsersPermissionsRoleEntityResponse: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsUpdateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsUser: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    createdAt: 'DateTime'
    email: 'String'
    lastAttendanceDate: 'String'
    provider: 'String'
    role: 'UsersPermissionsRoleEntityResponse'
    setting: 'SettingEntityResponse'
    settings: 'SettingRelationResponseCollection'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UsersPermissionsUserEntity: { // field return type name
    attributes: 'UsersPermissionsUser'
    id: 'ID'
  }
  UsersPermissionsUserEntityResponse: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  Variable: { // field return type name
    createdAt: 'DateTime'
    prompt: 'PromptEntityResponse'
    updatedAt: 'DateTime'
  }
  VariableEntity: { // field return type name
    attributes: 'Variable'
    id: 'ID'
  }
  VariableEntityResponse: { // field return type name
    data: 'VariableEntity'
  }
  VariableEntityResponseCollection: { // field return type name
    data: 'VariableEntity'
    meta: 'ResponseCollectionMeta'
  }
  VariableRelationResponseCollection: { // field return type name
    data: 'VariableEntity'
  }
  Word: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    list: 'ListEntityResponse'
    point: 'Long'
    studied: 'Boolean'
    translation: 'String'
    updatedAt: 'DateTime'
    word: 'String'
  }
  WordEntity: { // field return type name
    attributes: 'Word'
    id: 'ID'
  }
  WordEntityResponse: { // field return type name
    data: 'WordEntity'
  }
  WordEntityResponseCollection: { // field return type name
    data: 'WordEntity'
    meta: 'ResponseCollectionMeta'
  }
  WordRelationResponseCollection: { // field return type name
    data: 'WordEntity'
  }
}

export interface NexusGenArgTypes {
  List: {
    words: { // args
      filters?: NexusGenInputs['WordFiltersInput'] | null; // WordFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Mutation: {
    changePassword: { // args
      currentPassword: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    changeWordsPoint: { // args
      input?: Array<NexusGenInputs['WordsPointListInput'] | null> | null; // [WordsPointListInput]
    }
    checkSentences: { // args
      data?: Array<NexusGenInputs['SentenceInput'] | null> | null; // [SentenceInput]
    }
    createList: { // args
      data: NexusGenInputs['ListInput']; // ListInput!
    }
    createPrompt: { // args
      data: NexusGenInputs['PromptInput']; // PromptInput!
    }
    createSetting: { // args
      data: NexusGenInputs['SettingInput']; // SettingInput!
    }
    createUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
    }
    createUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
    }
    createUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
    }
    createUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
    }
    createWord: { // args
      data: NexusGenInputs['WordInput']; // WordInput!
    }
    createWordsList: { // args
      input: NexusGenInputs['WordsListInput']; // WordsListInput!
    }
    deleteList: { // args
      id: string; // ID!
    }
    deletePrompt: { // args
      id: string; // ID!
    }
    deleteSetting: { // args
      id: string; // ID!
    }
    deleteUploadFile: { // args
      id: string; // ID!
    }
    deleteUploadFolder: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsRole: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsUser: { // args
      id: string; // ID!
    }
    deleteWord: { // args
      id: string; // ID!
    }
    emailConfirmation: { // args
      confirmation: string; // String!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    getSentences: { // args
      id: string; // ID!
    }
    login: { // args
      input: NexusGenInputs['UsersPermissionsLoginInput']; // UsersPermissionsLoginInput!
    }
    multipleUpload: { // args
      field?: string | null; // String
      files: Array<NexusGenScalars['Upload'] | null>; // [Upload]!
      ref?: string | null; // String
      refId?: string | null; // ID
    }
    register: { // args
      input: NexusGenInputs['UsersPermissionsRegisterInput']; // UsersPermissionsRegisterInput!
    }
    removeFile: { // args
      id: string; // ID!
    }
    resetPassword: { // args
      code: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    updateFileInfo: { // args
      id: string; // ID!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
    }
    updateList: { // args
      data: NexusGenInputs['ListInput']; // ListInput!
      id: string; // ID!
    }
    updatePrompt: { // args
      data: NexusGenInputs['PromptInput']; // PromptInput!
      id: string; // ID!
    }
    updateSetting: { // args
      data: NexusGenInputs['SettingInput']; // SettingInput!
      id: string; // ID!
    }
    updateUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
      id: string; // ID!
    }
    updateUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
      id: string; // ID!
    }
    updateUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
      id: string; // ID!
    }
    updateUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
      id: string; // ID!
    }
    updateVariable: { // args
      data: NexusGenInputs['VariableInput']; // VariableInput!
    }
    updateWord: { // args
      data: NexusGenInputs['WordInput']; // WordInput!
      id: string; // ID!
    }
    upload: { // args
      field?: string | null; // String
      file: NexusGenScalars['Upload']; // Upload!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
      ref?: string | null; // String
      refId?: string | null; // ID
    }
  }
  Query: {
    i18NLocale: { // args
      id?: string | null; // ID
    }
    i18NLocales: { // args
      filters?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    list: { // args
      id?: string | null; // ID
    }
    lists: { // args
      filters?: NexusGenInputs['ListFiltersInput'] | null; // ListFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    prompt: { // args
      id?: string | null; // ID
    }
    prompts: { // args
      filters?: NexusGenInputs['PromptFiltersInput'] | null; // PromptFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    setting: { // args
      id?: string | null; // ID
    }
    settings: { // args
      filters?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFile: { // args
      id?: string | null; // ID
    }
    uploadFiles: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFolder: { // args
      id?: string | null; // ID
    }
    uploadFolders: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsRole: { // args
      id?: string | null; // ID
    }
    usersPermissionsRoles: { // args
      filters?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsUser: { // args
      id?: string | null; // ID
    }
    usersPermissionsUsers: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    word: { // args
      id?: string | null; // ID
    }
    words: { // args
      filters?: NexusGenInputs['WordFiltersInput'] | null; // WordFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Setting: {
    lists: { // args
      filters?: NexusGenInputs['ListFiltersInput'] | null; // ListFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UploadFolder: {
    children: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    files: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UsersPermissionsRole: {
    permissions: { // args
      filters?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    users: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UsersPermissionsUser: {
    settings: { // args
      filters?: NexusGenInputs['SettingFiltersInput'] | null; // SettingFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  GenericMorph: "ComponentContextDynamic" | "I18NLocale" | "List" | "Prompt" | "Setting" | "UploadFile" | "UploadFolder" | "UsersPermissionsPermission" | "UsersPermissionsRole" | "UsersPermissionsUser" | "Variable" | "Word"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "GenericMorph";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}